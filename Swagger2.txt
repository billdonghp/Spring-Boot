#Swagger2

1.pom.xml

<dependency>
	<groupId>io.springfox</groupId>
	<artifactId>springfox-swagger2</artifactId>
	<version>2.5.0</version>
</dependency>
<!-- swagger-ui -->
<dependency>
	<groupId>io.springfox</groupId>
	<artifactId>springfox-swagger-ui</artifactId>
	<version>2.5.0</version>
</dependency>

2.使用注解来进行启动swagger

@Configuration
@EnableSwagger2
public class SwaggerApp {
    @Bean
    public Docket createRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .select()
                //为当前包路径
                .apis(RequestHandlerSelectors.basePackage("com.template.controller"))
                .paths(PathSelectors.any())
                .build();
    }
    //构建 api文档的详细信息函数,注意这里的注解引用的是哪个
    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                //页面标题
                .title("Spring Boot 使用 Swagger2 构建RESTful API")
                //创建人
				.contact(new Contact("Bryan", "http://blog.bianxh.top/", ""))
                //版本号
                .version("1.0")
                //描述
                .description("API 描述")
                .build();
    }
}

3.配置Controller

@RestController
@RequestMapping("customer/")
@Api(tags = "客户管理")
public class CustomerController {
    @Autowired
    private CustomerService customerService;

    private Logger logger = LoggerFactory.getLogger(CustomerController.class);
    @PostMapping("get")
    @Authorization
    @ApiOperation(value="查询客户",notes="查询")
    @ApiImplicitParam(required = true, name="authorization",value="authorization", dataType = "String", paramType="header")
    public Result get(Customer customer){
        logger.info("getCustomer_id:" + customer.getId());
        return ResultUtil.ok(customerService.get(customer));
    }
}

4.URL:http://localhost:8889/swagger-ui.html